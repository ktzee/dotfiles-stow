# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
set $menu "rofi -combi-modi window,drun,run,ssh -show combi -show-icons"

set $main-display DP-1
set $second-display DP-2

### Looks
#smart_borders on
gaps inner 5
gaps outer 3
default_border pixel 3 # this hides the title bar
# the following requires swayfx https://github.com/WillPower3309/swayfx
# corner_radius 10
shadows enable
shadows_on_csd enable
shadow_blur_radius 20
blur enable
blur passes 2
blur_radius 3

### Output configuration
#
#
# Example configuration:
#
output DP-1 mode 2560x1440@165Hz position 0 720 adaptive_sync on allow_tearing yes bg /home/ktz/Pictures/wallpapers/jinx-1440p.png fill
output DP-2 mode 2560x1440@165Hz position 2561 0 transform 90 adaptive_sync on allow_tearing yes bg /home/ktz/Pictures/wallpapers/landscape-1440x2560-portrait.png center

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output DP-1

# fix games opening on wrong output
exec_always --no-startup-id xrandr --output DP-1 --primary
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
    # This seems to be the actual mouse
    input "1133:50503:Logitech_USB_Receiver" {
        accel_profile "flat"
        pointer_accel 0
    }
    input "5426:195:Razer_Razer_DeathAdder_V3_Pro" {
        accel_profile "flat"
        pointer_accel 0
    }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

exec_always --no-startup-id dunst&
exec_always --no-startup-id /home/ktz/.config/waybar/launch_waybar.sh&
exec_always --no-startup-id nm-applet --indicator&
exec_always --no-startup-id syncthingtray-qt6 --wait&

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+z kill

    # Start your launcher
    bindsym $mod+space exec $menu
    bindsym $mod+p exec rofimoji -a type

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Make some windows always float
    for_window [app_id="pop-up"]                     floating enable
    for_window [app_id="bubble"]                     floating enable
    for_window [app_id="task_dialog"]                floating enable
    for_window [app_id="Preferences"]                floating enable
    for_window [app_id="dialog"]                     floating enable
    for_window [app_id="menu"]                       floating enable
    for_window [app_id="Organizer"]                  floating enable
    for_window [app_id="About"]                      floating enable
    for_window [app_id="toolbox"]                    floating enable
    for_window [app_id="page-info"]                  floating enable
    for_window [app_id="webconsole"]                 floating enable
    for_window [app_id="Authy"]                      floating enable
    for_window [app_id="termfloat"]                  floating enable
    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # Reload waybar's configuration file
    bindsym $mod+Shift+b exec pkill -SIGUSR2 waybar

    # Reload sway
    bindsym $mod+Shift+r exec swaymsg

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+Ctrl+l exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

    set $ws5 "q"
    set $ws6 "w"
    set $ws7 "e"

    workspace "1" output $main-display
    workspace 2 output $main-display
    workspace 3 output $main-display
    workspace 4 output $main-display
    workspace 5 output $main-display
    workspace ">" output $main-display
    workspace "Launchers" output $main-display
    workspace $ws5 output $second-display
    workspace $ws6 output $second-display
    workspace $ws7 output $second-display

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+a workspace ">"
    bindsym $mod+s workspace "Launchers"
    bindsym $mod+q workspace $ws5
    bindsym $mod+w workspace $ws6
    bindsym $mod+e workspace $ws7
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+a move container to workspace ">"
    bindsym $mod+Shift+s move container to workspace "Launchers"
    bindsym $mod+Shift+q move container to workspace $ws5
    bindsym $mod+Shift+w move container to workspace $ws6
    bindsym $mod+Shift+e move container to workspace $ws7
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv
    bindsym $mod+shift+v split toggle

    # Switch the current container between different layout styles
    # bindsym $mod+Shift+l layout toggle
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    # screenshot active window
    bindsym Print exec "/home/ktz/.scripts/sway-screenshot -m window -o /home/ktz/Pictures/Screenshots/"
    # screenshot region
    bindsym $mod+Print exec "/home/ktz/.scripts/sway-screenshot -m region -o /home/ktz/Pictures/Screenshots/"
    # screenshot region without saving to file
    bindsym $mod+Shift+Print exec "/home/ktz/.scripts/sway-screenshot --clipboard-only -m region"
    # bindsym Print exec "notify-send lol"

# bar {
#     status_command waybar
# }
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     status_command i3status-rs
#     position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done

#        statusline #ffffff
#             colors {
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*
